{"version":3,"sources":["components/Header.js","components/Create.js","components/Edit.js","components/Index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","Create","state","errors","username","mobile_no","email","baseState","hasErrorFor","bind","renderErrorFor","handleInsertUser","handleInputFieldChange","e","this","setState","target","name","value","preventDefault","data","id","Math","floor","random","checkValidation","reset","props","updateState","document","getElementById","click","toastr","success","position","heading","fields","error","length","fieldName","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","onSubmit","htmlFor","placeholder","onChange","Edit","user_id","handleUpdateUser","user_data","user","warn","Index","users","editUser","handleUpdateState","operation","new_users","concat","prevState","filter","Object","assign","userId","find","x","i","map","key","onClick","handleEditUser","handleDeleteUser","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f497b865.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Header extends Component\r\n{\r\n    render() {\r\n      return(\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to={'/'}>\r\n              <img src=\"/logo.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"Logo\"/>\r\n                &nbsp; React Property Calculator\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n          </nav>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React, {Component} from 'react'\r\nimport toastr from 'cogo-toast';\r\n\r\nclass Create extends Component\r\n{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t//--- Declare state variable for this component ---//\r\n\t\tthis.state = {\r\n\t\t\terrors    : [],\r\n\t\t\tusername  : '',\r\n\t\t\tmobile_no : '',\r\n\t\t\temail \t  : ''\r\n\t\t}\r\n\t\t//--- Declare method for this component ---//\r\n\t\tthis.baseState = this.state\r\n\t\tthis.hasErrorFor = this.hasErrorFor.bind(this);\r\n\t\tthis.renderErrorFor = this.renderErrorFor.bind(this);\r\n\t\tthis.handleInsertUser = this.handleInsertUser.bind(this);\r\n\t\tthis.handleInputFieldChange = this.handleInputFieldChange.bind(this);\r\n\t}\r\n\t//--- Update state variable value while input field change ---//\r\n\thandleInputFieldChange(e) {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\t//--- Insert new user in users state array by props method ---//\r\n\thandleInsertUser(e) {\r\n\t\te.preventDefault()\r\n\t\tconst data = {\r\n\t\t\tid \t\t  : Math.floor(Math.random() * 100),\r\n\t\t\tusername  : this.state.username,\r\n\t\t\tmobile_no : this.state.mobile_no,\r\n\t\t\temail     : this.state.email\r\n\t\t}\r\n\t\tif( !this.checkValidation(data) ) {\r\n\t\t\tthis.reset();\r\n\t\t\tthis.props.updateState(data, 0);\r\n\t\t\tdocument.getElementById(\"closeAddModal\").click();\r\n\t\t\ttoastr.success('New user added successfully!', {position : 'top-right', heading: 'Done'});\r\n\t\t}\r\n\t}\r\n\t//--- Validate all input field ---//\r\n    checkValidation(fields) {\r\n    \tvar error = {};\r\n    \tif(fields.username.length === 0) {\r\n    \t\terror.username = ['This field is required!'];\r\n    \t}\r\n    \tif(fields.mobile_no.length === 0) {\r\n    \t\terror.mobile_no = ['This field is required!'];\r\n    \t}\r\n    \tif(fields.email.length === 0) {\r\n    \t\terror.email = ['This field is required!'];\r\n    \t}\r\n\t\tthis.setState({\r\n\t\t\terrors : error\r\n\t\t})\r\n\t\tif(fields.username.length === 0 || fields.mobile_no.length === 0 || fields.email.length === 0) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n    }\r\n    //--- Reset all state variable while insert new user ---//\r\n    reset() {\r\n        this.setState(this.baseState);\r\n    }\r\n    //--- Check that any validation errors occure for input field ---//\r\n\thasErrorFor(fieldName) {\r\n\t\treturn !!this.state.errors[fieldName];\r\n\t}\r\n\t//--- Render error for specific validation fail input field ---//\r\n\trenderErrorFor(fieldName) {\r\n    \tif (this.hasErrorFor(fieldName)) {\r\n\t        return (\r\n\t        \t<em className=\"error invalid-feedback\"> {this.state.errors[fieldName][0]} </em>\r\n\t        )\r\n      \t}\r\n    }\r\n\r\n    render() {\r\n      return(\r\n\t\t\t<div className=\"modal fade\" id=\"addModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n\t\t\t  \t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t    \t<div className=\"modal-content\">\r\n\t\t\t      \t\t<div className=\"modal-header\">\r\n\t\t\t        \t\t<h5 className=\"modal-title\">New user</h5>\r\n\t\t\t        \t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t          \t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t        \t\t</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t        <form onSubmit={this.handleInsertUser}>\r\n\t\t\t      \t\t<div className=\"modal-body\">\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"username\" className=\"col-form-label\">User name:</label>\r\n\t\t\t            \t\t<input type=\"text\" className={`form-control form-control-sm ${this.hasErrorFor('username') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"username\" name=\"username\" placeholder=\"User name\" onChange={this.handleInputFieldChange} value={this.state.username}/>\r\n\t\t\t            \t\t{this.renderErrorFor('username')}\r\n\t\t\t         \t \t</div>\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"mobile_no\" className=\"col-form-label\">Mobile No:</label>\r\n\t\t\t            \t\t<input type=\"number\" className={`form-control form-control-sm ${this.hasErrorFor('mobile_no') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"mobile_no\" name=\"mobile_no\" placeholder=\"Mobile no\" onChange={this.handleInputFieldChange} value={this.state.mobile_no}/>\r\n\t\t\t            \t\t{this.renderErrorFor('mobile_no')}\r\n\t\t\t          \t\t</div>\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"email\" className=\"col-form-label\">Email:</label>\r\n\t\t\t            \t\t<input type=\"email\" className={`form-control form-control-sm ${this.hasErrorFor('email') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"email\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputFieldChange} value={this.state.email}/>\r\n\t\t\t            \t\t{this.renderErrorFor('email')}\r\n\t\t\t          \t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div className=\"modal-footer\">\r\n\t\t\t        \t\t<button type=\"button\" id=\"closeAddModal\" className=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Close</button>\r\n\t\t\t        \t\t<button type=\"submit\" className=\"btn btn-primary btn-sm\">Save User</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t   \t\t</form>\r\n\t\t\t    \t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\nexport default Create","import React, {Component} from 'react'\r\nimport toastr from 'cogo-toast';\r\n\r\nclass Edit extends Component\r\n{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t//--- Declare method for this component ---//\r\n\t\tthis.state = {\r\n\t\t\terrors    : [],\r\n\t\t\tuser_id   : '',\r\n\t\t\tusername  : '',\r\n\t\t\tmobile_no : '',\r\n\t\t\temail \t  : ''\r\n\t\t}\r\n\t\t//--- Declare method for this component ---//\r\n\t\tthis.baseState = this.state\r\n\t\tthis.hasErrorFor = this.hasErrorFor.bind(this);\r\n\t\tthis.renderErrorFor = this.renderErrorFor.bind(this);\r\n\t\tthis.handleUpdateUser = this.handleUpdateUser.bind(this);\r\n\t\tthis.handleInputFieldChange = this.handleInputFieldChange.bind(this);\r\n\t}\r\n\t//--- Receive props while update modal open ---//\r\n\tUNSAFE_componentWillReceiveProps(user_data) {\r\n\t\tthis.setState({\r\n\t\t\tuser_id   : user_data.user.id,\r\n\t\t\tusername  : user_data.user.username,\r\n\t\t\tmobile_no : user_data.user.mobile_no,\r\n\t\t\temail     : user_data.user.email\r\n\t\t})\r\n\t}\r\n\t//--- Update state variable value while input field change ---//\r\n\thandleInputFieldChange(e) {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\t//--- Update state users variable by props method ---//\r\n\thandleUpdateUser(e) {\r\n\t\te.preventDefault()\r\n\t\t//--- Declare state variable for this component ---//\r\n\t\tconst data = {\r\n\t\t\tid        : this.state.user_id,\r\n\t\t\tusername  : this.state.username,\r\n\t\t\tmobile_no : this.state.mobile_no,\r\n\t\t\temail     : this.state.email\r\n\t\t}\r\n\t\tif( !this.checkValidation(data) ) {\r\n\t\t\tthis.reset();\r\n\t\t\tthis.props.updateState(data, 1);\r\n\t\t\tdocument.getElementById(\"closeEditModal\").click();\r\n\t\t\ttoastr.warn('User data updated successfully!', {position : 'top-right', heading: 'Done'});\r\n\t\t}\r\n\t}\r\n    //--- Validate all input field ---//\r\n    checkValidation(fields) {\r\n    \tvar error = {};\r\n    \tif(fields.username.length === 0) {\r\n    \t\terror.username = ['This field is required!'];\r\n    \t}\r\n    \tif(fields.mobile_no.length === 0) {\r\n    \t\terror.mobile_no = ['This field is required!'];\r\n    \t}\r\n    \tif(fields.email.length === 0) {\r\n    \t\terror.email = ['This field is required!'];\r\n    \t}\r\n\t\tthis.setState({\r\n\t\t\terrors : error\r\n\t\t})\r\n\t\tif(fields.username.length === 0 || fields.mobile_no.length === 0 || fields.email.length === 0) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n    }\r\n    //--- Reset all state variable while update user ---//\r\n\treset() {\r\n        this.setState(this.baseState);\r\n    }\r\n    //--- Check that any validation errors occure for input field ---//\r\n\thasErrorFor(fieldName) {\r\n\t\treturn !!this.state.errors[fieldName];\r\n\t}\r\n\t//--- Render error for specific validation fail input field ---//\r\n\trenderErrorFor(fieldName) {\r\n    \tif (this.hasErrorFor(fieldName)) {\r\n\t        return (\r\n\t        \t<em className=\"error invalid-feedback\"> {this.state.errors[fieldName][0]} </em>\r\n\t        )\r\n      \t}\r\n    }\r\n\r\n    render() {\r\n      return(\r\n\t\t\t<div className=\"modal fade\" id=\"editModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n\t\t\t  \t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t    \t<div className=\"modal-content\">\r\n\t\t\t      \t\t<div className=\"modal-header\">\r\n\t\t\t        \t\t<h5 className=\"modal-title\">Update user information</h5>\r\n\t\t\t        \t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t          \t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t        \t\t</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t        <form onSubmit={this.handleUpdateUser}>\r\n\t\t\t      \t\t<div className=\"modal-body\">\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"username\" className=\"col-form-label\">User name:</label>\r\n\t\t\t            \t\t<input type=\"text\" className={`form-control form-control-sm ${this.hasErrorFor('username') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"username\" name=\"username\" placeholder=\"User name\" onChange={this.handleInputFieldChange} value={this.state.username}/>\r\n\t\t\t            \t\t{this.renderErrorFor('username')}\r\n\t\t\t         \t \t</div>\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"mobile_no\" className=\"col-form-label\">Mobile No:</label>\r\n\t\t\t            \t\t<input type=\"text\" className={`form-control form-control-sm ${this.hasErrorFor('mobile_no') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"mobile_no\" name=\"mobile_no\" placeholder=\"Mobile no\" onChange={this.handleInputFieldChange} value={this.state.mobile_no}/>\r\n\t\t\t            \t\t{this.renderErrorFor('mobile_no')}\r\n\t\t\t          \t\t</div>\r\n\t\t\t          \t\t<div className=\"form-group\">\r\n\t\t\t            \t\t<label htmlFor=\"email\" className=\"col-form-label\">Email:</label>\r\n\t\t\t            \t\t<input type=\"email\" className={`form-control form-control-sm ${this.hasErrorFor('email') ? 'is-invalid' : ''}`}\r\n\t\t\t            \t\t id=\"email\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputFieldChange} value={this.state.email}/>\r\n\t\t\t            \t\t{this.renderErrorFor('email')}\r\n\t\t\t          \t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div className=\"modal-footer\">\r\n\t\t\t        \t\t<button type=\"button\" id=\"closeEditModal\" className=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Close</button>\r\n\t\t\t        \t\t<button type=\"submit\" className=\"btn btn-primary btn-sm\">Save Changes</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t   \t\t</form>\r\n\t\t\t    \t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\nexport default Edit","import React, {Component} from 'react'\r\nimport toastr from 'cogo-toast';\r\nimport Create from './Create'\r\nimport Edit from './Edit'\r\n\r\nclass Index extends Component\r\n{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t//--- Declare state variable for this component ---//\r\n\t\tthis.state = {\r\n\t\t\tusers     : [\r\n\t\t\t\t{id : 11, username : \"Moazzam Hossain\", mobile_no : \"88018 29887799\", email : \"moazzam@gmail.com\"},\r\n\t\t\t\t{id : 22, username : \"Azim Uddin\", mobile_no : \"88017 23665544\", email : \"azim@gmail.com\"},\r\n\t\t\t\t{id : 33, username : \"Sojol Kaisar\", mobile_no : \"88016 26332211\", email : \"sojol@gmail.com\"}\r\n\t\t\t],\r\n\t\t\teditUser : {}\r\n\t\t}\r\n\t\t//--- Declare method for this component ---//\r\n\t\tthis.handleUpdateState = this.handleUpdateState.bind(this);\r\n\t}\r\n\t//--- Update state variable while any user insert or update ---//\r\n\thandleUpdateState(data, operation) {\r\n\t\t//--- 'operation==1' means update user ---//\r\n\t\tif(operation === 1) {\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tusers : prevState.users.filter(user => {\r\n\t\t\t\t\tif(user.id === data.id)\r\n\t\t\t\t\t\treturn Object.assign(user, data);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn user;\r\n\t\t\t\t})\r\n\t\t\t}))\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//--- 'operation==0' means insert user ---//\r\n\t\tvar new_users = this.state.users.concat(data);\r\n\t\tthis.setState({\r\n\t\t\tusers : new_users\r\n\t\t})\r\n\t}\r\n\t//--- Find editable user and update state variable ---//\r\n\thandleEditUser(userId) {\r\n\t\tthis.setState({\r\n\t\t\teditUser : this.state.users.find(x => x.id === userId)\r\n\t\t})\r\n\t}\r\n\t//--- Delete user and update state ---//\r\n\thandleDeleteUser(id) {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tusers : prevState.users.filter((user, i) => {\r\n\t\t\t\treturn i !== id;\r\n\t\t\t})\r\n\t\t}))\r\n\t\ttoastr.error('User has been deleted successfully!', {position : 'top-right', heading: 'Done'});\r\n\t}\r\n\r\n    render() {\r\n      return(\r\n          \t<div className=\"card mt-4\">\r\n\t\t\t    <div className=\"card-header\">\r\n\t\t\t        <h4 className=\"card-title\"> Properties </h4>\r\n\t\t\t        <button type=\"button\" className=\"btn btn-primary btn-sm pull-right\" data-toggle=\"modal\" data-target=\"#addModal\"> Add Property </button>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"card-body\">\r\n\t\t\t        <div className=\"col-md-12\">\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Id </th>\r\n                                    <th> Full Name </th>\r\n                                    <th> Mobile No </th>\r\n                                    <th> Email </th>\r\n                                    <th> Action </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.users.map((user, i) => (\r\n                                <tr key={i}>\r\n                                    <td> {user.id} </td>\r\n                                    <td> {user.username} </td>\r\n                                    <td> {user.mobile_no} </td>\r\n                                    <td> {user.email} </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-info btn-sm mr-2\" onClick={this.handleEditUser.bind(this, user.id)} data-toggle=\"modal\" data-target=\"#editModal\"> Edit </button>\r\n                                        <button className=\"btn btn-danger btn-sm\" onClick={this.handleDeleteUser.bind(this, i)}> Delete </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n\t\t\t        </div>\r\n\t\t\t    </div>\r\n\t\t\t    <Create updateState = {this.handleUpdateState} />\r\n\t\t\t    <Edit updateState = {this.handleUpdateState} user = {this.state.editUser} />\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\nexport default Index","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Index from './components/Index'\r\n\r\nclass App extends Component\r\n{\r\n    render() {\r\n        return(\r\n          <Router>\r\n            <div className=\"container\">\r\n              <Header/>\r\n\r\n              <Switch>\r\n                <Route path='/' component={Index} exact/>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        )\r\n    }\r\n}\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}